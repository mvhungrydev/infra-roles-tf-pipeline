version: 0.2

env:
  parameter-store:
    # Optional: Use parameter store for sensitive variables
    # TERRAFORM_VAR_example: /terraform/example-var
  variables:
    # Default action if not specified
    TERRAFORM_ACTION: "apply"

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Installing latest Terraform..."
      - TERRAFORM_VERSION=$(curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | grep tag_name | cut -d '"' -f 4 | sed 's/v//')
      - echo "Latest Terraform version: $TERRAFORM_VERSION"
      - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform --version

  pre_build:
    commands:
      - echo "Logging in to AWS..."
      - aws --version
      - aws sts get-caller-identity
      - echo "Terraform action requested: $TERRAFORM_ACTION"
      - echo "Initializing Terraform..."
      - terraform init

  build:
    commands:
      - |
        if [ "$TERRAFORM_ACTION" = "destroy" ]; then
          echo "ðŸ”¥ DESTROYING Terraform resources..."
          echo "Planning destruction..."
          terraform plan -destroy -out=tfplan-destroy
          echo "Applying destruction plan..."
          terraform apply -auto-approve tfplan-destroy
        elif [ "$TERRAFORM_ACTION" = "plan" ]; then
          echo "ðŸ“‹ Planning Terraform changes (no apply)..."
          terraform plan
        else
          echo "ðŸš€ Applying Terraform changes..."
          echo "Planning Terraform changes..."
          terraform plan -out=tfplan
          echo "Displaying plan details..."
          terraform show tfplan
          echo "Applying Terraform changes..."
          terraform apply -auto-approve tfplan
        fi

  post_build:
    commands:
      - |
        if [ "$TERRAFORM_ACTION" = "destroy" ]; then
          echo "ðŸ’¥ Terraform destruction completed"
        elif [ "$TERRAFORM_ACTION" = "plan" ]; then
          echo "ðŸ“‹ Terraform planning completed"
        else
          echo "âœ… Terraform deployment completed"
          echo "Outputting results..."
          terraform output
        fi

artifacts:
  files:
    - "**/*"
  name: terraform-iam-roles-$(date +%Y-%m-%d)

cache:
  paths:
    - ".terraform/**/*"
